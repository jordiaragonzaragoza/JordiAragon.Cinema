// <auto-generated />
using System;
using JordiAragon.Cinemas.Ticketing.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JordiAragon.Cinemas.Ticketing.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(TicketingContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.AuditoriumAggregate.Auditorium", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Rows")
                        .HasColumnType("smallint");

                    b.Property<short>("SeatsPerRow")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Auditoriums", (string)null);
                });

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.MovieAggregate.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImdbId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDateOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Stars")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.ShowtimeAggregate.Showtime", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuditoriumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SessionDateOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Showtimes", (string)null);
                });

            modelBuilder.Entity("JordiAragon.SharedKernel.Infrastructure.EntityFramework.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOccurredOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateProcessedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OutboxMessages");
                });

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.AuditoriumAggregate.Auditorium", b =>
                {
                    b.OwnsMany("JordiAragon.Cinemas.Ticketing.Domain.ShowtimeAggregate.ShowtimeId", "Showtimes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("AuditoriumId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ShowtimeId");

                            b1.HasKey("Id");

                            b1.HasIndex("AuditoriumId");

                            b1.ToTable("AuditoriumsShowtimeIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AuditoriumId");
                        });

                    b.OwnsMany("JordiAragon.Cinemas.Ticketing.Domain.AuditoriumAggregate.Seat", "Seats", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("SeatId");

                            b1.Property<Guid>("AuditoriumId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedByUserId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreationDateOnUtc")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedByUserId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ModificationDateOnUtc")
                                .HasColumnType("datetime2");

                            b1.Property<short>("Row")
                                .HasColumnType("smallint");

                            b1.Property<short>("SeatNumber")
                                .HasColumnType("smallint");

                            b1.HasKey("Id", "AuditoriumId");

                            b1.HasIndex("AuditoriumId");

                            b1.ToTable("AuditoriumsSeats", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AuditoriumId");
                        });

                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.MovieAggregate.Movie", b =>
                {
                    b.OwnsMany("JordiAragon.Cinemas.Ticketing.Domain.ShowtimeAggregate.ShowtimeId", "Showtimes", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("MovieId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ShowtimeId");

                            b1.HasKey("Id");

                            b1.HasIndex("MovieId");

                            b1.ToTable("MoviesShowtimeIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MovieId");
                        });

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("JordiAragon.Cinemas.Ticketing.Domain.ShowtimeAggregate.Showtime", b =>
                {
                    b.OwnsMany("JordiAragon.Cinemas.Ticketing.Domain.ShowtimeAggregate.Ticket", "Tickets", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("ShowtimeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CreatedByUserId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("CreatedTimeOnUtc")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("CreationDateOnUtc")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsPaid")
                                .HasColumnType("bit");

                            b1.Property<string>("LastModifiedByUserId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ModificationDateOnUtc")
                                .HasColumnType("datetime2");

                            b1.HasKey("Id", "ShowtimeId");

                            b1.HasIndex("ShowtimeId");

                            b1.ToTable("ShowtimesTickets", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ShowtimeId");

                            b1.OwnsMany("JordiAragon.Cinemas.Ticketing.Domain.AuditoriumAggregate.SeatId", "Seats", b2 =>
                                {
                                    b2.Property<Guid>("TicketId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ShowtimeId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("SeatId");

                                    b2.HasKey("TicketId", "ShowtimeId", "Id");

                                    b2.ToTable("TicketSeatIds", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("TicketId", "ShowtimeId");
                                });

                            b1.Navigation("Seats");
                        });

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
